{"version":3,"sources":["../src/color_mode_discrete.ts"],"names":["ColorModeDiscrete","scope","panelCtrl","ctrl","panel","values","thresholds","color","tooltips","i","length","j","value","push","tooltip","notMatched","getMatchedThreshold","threshold","index","getThreshold","isAllValuesNulls","getDiscreteColor","bucketMatrix","noColorDefined","targets","map","target","buckets","bucket","nullPointMode","k","interval"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport { Bucket } from \"./statusmap_data\";\nimport { StatusHeatmapCtrl } from \"./module\";\n\ninterface Tooltip {\n  tooltip: string;\n  color: string;\n}\n\ndeclare class DiscreteColorThreshold {\n  color: string;\n  value: number;\n  tooltip: string;\n}\n\n// Extra Series methods to handle discrete color mode\nexport class ColorModeDiscrete {\n  scope: any;\n  panelCtrl: StatusHeatmapCtrl;\n  panel: any;\n\n  constructor(scope) {\n    this.scope = scope;\n    this.panelCtrl = scope.ctrl;\n    this.panel = scope.ctrl.panel;\n  }\n\n  // get tooltip for each value ordered by thresholds priority\n  convertValuesToTooltips(values:any[]) : Tooltip[] {\n    let thresholds = this.panel.color.thresholds;\n    let tooltips:Tooltip[] = [];\n\n    for (let i = 0; i < thresholds.length; i++) {\n      for (let j = 0; j < values.length; j++) {\n        if (values[j] == thresholds[i].value) {\n          tooltips.push({\n            \"tooltip\": thresholds[i].tooltip?thresholds[i].tooltip:values[j],\n            \"color\": thresholds[i].color\n          });\n        }\n      }\n    }\n    return tooltips;\n  }\n\n  convertValueToTooltips(values) {\n    let thresholds = this.panel.color.thresholds;\n    let tooltips = [];\n\n    for (let i = 0; i < thresholds.length; i++) {\n      //for (let j = 0; j < values.length; j++) {\n        if (values == thresholds[i].value) {\n          tooltips.push({\n            \"tooltip\": thresholds[i].tooltip?thresholds[i].tooltip:values,\n            \"color\": thresholds[i].color\n          });\n        //}\n      }\n    }\n    return tooltips;\n  }\n\n  getNotMatchedValues(values:any[]) {\n    let notMatched:any[] = [];\n    for (let j = 0; j < values.length; j++) {\n      if (!this.getMatchedThreshold(values[j])) {\n        notMatched.push(values[j]);\n      }\n    }\n    return notMatched;\n  }\n\n  getNotColoredValues(values:any[]) {\n    let notMatched:any[] = [];\n    for (let j = 0; j < values.length; j++) {\n      let threshold = this.getMatchedThreshold(values[j]);\n      if (!threshold || !threshold.color || threshold.color == \"\") {\n        notMatched.push(values[j]);\n      }\n    }\n    return notMatched;\n  }\n\n  getDiscreteColor(index) {\n    let color = this.getThreshold(index).color;\n    if (!color || color == \"\") {\n      return 'rgba(0,0,0,1)';\n    }\n    return color;\n  }\n\n  getBucketColorSingle(value) {\n    //let thresholds = this.panel.color.thresholds;\n    if (value == null) {\n      // treat as null value\n      return 'rgba(0,0,0,1)';\n      //return this.getMatchedThreshold(null).color;\n    }\n      let threshold = this.getMatchedThreshold(value);\n\n      if (!threshold || !threshold.color || threshold.color == \"\") {\n        return 'rgba(0,0,0,1)';\n      } else {\n        return threshold.color;\n      }\n  }\n\n  // returns color from first matched thresold in order from 0 to thresholds.length\n  getBucketColor(values) {\n    let thresholds = this.panel.color.thresholds;\n\n    if (!values || values.length == 0) {\n      // treat as null value\n      return this.getMatchedThreshold(null).color;\n    }\n\n    if (values.length == 1) {\n      let threshold = this.getMatchedThreshold(values[0]);\n      if (!threshold || !threshold.color || threshold.color == \"\") {\n        return 'rgba(0,0,0,1)';\n      } else {\n        return threshold.color;\n      }\n    }\n\n    let isAllValuesNulls = true;\n    for (let j = 0; j < values.length; j++) {\n      if (values[j] != null) {\n        isAllValuesNulls = false;\n      }\n    }\n    if (isAllValuesNulls) {\n      return this.getMatchedThreshold(null).color;\n    }\n\n    for (let i = 0; i < thresholds.length; i++) {\n      for (let j = 0; j < values.length; j++) {\n        if (values[j] == thresholds[i].value) {\n          return this.getDiscreteColor(i);\n        }\n      }\n    }\n    return 'rgba(0,0,0,1)';\n  }\n\n\n  updateCardsValuesHasColorInfoSingle() {\n    if (!this.panelCtrl.bucketMatrix) {\n      return;\n    }\n    this.panelCtrl.bucketMatrix.noColorDefined = false;\n\n    this.panelCtrl.bucketMatrix.targets.map((target:string) => {\n      this.panelCtrl.bucketMatrix.buckets[target].map((bucket:Bucket) => {\n        bucket.noColorDefined = false;\n        let threshold = this.getMatchedThreshold(bucket.value);\n        if (!threshold || !threshold.color || threshold.color == \"\") {\n          bucket.noColorDefined = true;\n          this.panelCtrl.bucketMatrix.noColorDefined = true;\n        }\n      });\n    });\n  }\n\n  updateCardsValuesHasColorInfo() {\n    if (!this.panelCtrl.bucketMatrix) {\n      return\n    }\n    this.panelCtrl.bucketMatrix.noColorDefined = false;\n\n    this.panelCtrl.bucketMatrix.targets.map((target:string) => {\n      this.panelCtrl.bucketMatrix.buckets[target].map((bucket:Bucket) => {\n        bucket.noColorDefined = false;\n        for (let j=0; j<bucket.values.length; j++) {\n          let threshold = this.getMatchedThreshold(bucket.values[j]);\n          if (!threshold || !threshold.color || threshold.color == \"\") {\n            bucket.noColorDefined = true;\n            this.panelCtrl.bucketMatrix.noColorDefined = true;\n            break;\n          }\n        }\n      });\n    });\n  }\n\n  getMatchedThreshold(value) {\n    if (value == null) {\n      if (this.panel.nullPointMode == 'as empty') {\n        // FIXME: make this explicit for user\n        // Right now this color never used because null as empty handles in getCardOpacity method.\n        return {\n          \"color\": \"rgba(0,0,0,0)\",\n          \"value\": \"null\",\n          \"tooltip\": \"null\",\n        }\n      } else {\n        value = 0;\n      }\n    }\n\n    let thresholds = this.panel.color.thresholds;\n    for (let k = 0; k < thresholds.length; k++) {\n      if (value == thresholds[k].value) {\n        return thresholds[k];\n      }\n    }\n    return null;\n  }\n\n  getThreshold(index) {\n    let thresholds = this.panel.color.thresholds;\n    if (index < 0 || index >= thresholds.length == null) {\n      return {\n        \"color\": \"rgba(0,0,0,0)\",\n        \"value\": \"null\",\n        \"tooltip\": \"null\",\n      }\n    }\n    return thresholds[index];\n  }\n\n  roundIntervalCeil(interval) {\n    switch (true) {\n      case interval <= 10:\n        return 10; // 0.01s\n      case interval <= 20:\n        return 20; // 0.02s\n      case interval <= 50:\n        return 50; // 0.05s\n      case interval <= 100:\n        return 100; // 0.1s\n      case interval <= 200:\n        return 200; // 0.2s\n      case interval <= 500:\n        return 500; // 0.5s\n      case interval <= 1000:\n        return 1000; // 1s\n      case interval <= 2000:\n        return 2000; // 2s\n      case interval <= 5000:\n        return 5000; // 5s\n      case interval <= 10000:\n        return 10000; // 10s\n      case interval <= 15000:\n        return 15000; // 15s\n      case interval <= 20000:\n        return 20000; // 20s\n      case interval <= 30000:\n        return 30000; // 30s\n      case interval <= 60000:\n        return 60000; // 1m\n      case interval <= 120000:\n        return 120000; // 2m\n      case interval <= 300000:\n        return 300000; // 5m\n      case interval <= 600000:\n        return 600000; // 10m\n      case interval <= 900000:\n        return 900000; // 15m\n      case interval <= 1200000:\n        return 1200000; // 20m\n      case interval <= 1800000:\n        return 1800000; // 30m\n      case interval <= 3600000:\n        return 3600000; // 1h\n      case interval <= 7200000:\n        return 7200000; // 2h\n      case interval <= 10800000:\n        return 10800000; // 3h\n      case interval <= 21600000:\n        return 21600000; // 6h\n      case interval <= 43200000:\n        return 43200000; // 12h\n      case interval <= 86400000:\n        return 86400000; // 1d\n      case interval <= 604800000:\n        return 604800000; // 1w\n      case interval <= 2592000000:\n        return 2592000000; // 30d\n      default:\n        return 31536000000; // 1y\n    }\n  }\n}\n"],"file":"color_mode_discrete.js"}