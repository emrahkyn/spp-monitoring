{"version":3,"sources":["../../src/specs/panel_config_migration.test.ts"],"names":["migratePanelConfig","describe","panel","panelConfig","beforeEach","Object","assign","it","expect","usingUrl","toBeUndefined","tooltip","toHaveProperty","freezeOnClick","toBeTruthy","urls","items","toHaveLength","length","urlTemplate","toContain"],"mappings":";;;;;;;;AAASA,MAAAA,kB,2BAAAA,kB;;;AAETC,MAAAA,QAAQ,CAAC,oCAAD,EAAuC,YAAM;AACnD,YAAIC,KAAJ;AAEAD,QAAAA,QAAQ,CAAC,gCAAD,EAAmC,YAAM;AAC/C,cAAME,WAAW,GAAG;AAClB,qBAAS;AACP,8BAAgB,CADT;AAEP,8BAAgB,CAFT;AAGP,2BAAa,IAHN;AAIP,8BAAgB;AAJT,aADS;AAOlB,qBAAS;AACP,2BAAa,SADN;AAEP,4BAAc,MAFP;AAGP,6BAAe,mBAHR;AAIP,8BAAgB,SAJT;AAKP,0BAAY,GALL;AAMP,sBAAQ,SAND;AAOP,4BAAc;AAPP,aAPS;AAgBlB,oBAAQ;AACN,0BAAY,IADN;AAEN,4BAAc;AAFR,aAhBU;AAoBlB,0BAAc,aApBI;AAqBlB,uBAAW;AACT,mBAAK,CADI;AAET,mBAAK,EAFI;AAGT,mBAAK,CAHI;AAIT,mBAAK;AAJI,aArBO;AA2BlB,8BAAkB,IA3BA;AA4BlB,kBAAM,CA5BY;AA6BlB,sBAAU;AACR,sBAAQ;AADA,aA7BQ;AAgClB,6BAAiB,UAhCC;AAiClB,iCAAqB,CAAC,CAjCJ;AAkClB,uBAAW,CACT;AACE,6BAAe,MADjB;AAEE,yBAAW;AACT,4BAAY,EADH;AAET,6BAAa;AAFJ,eAFb;AAME,0BAAY,CANd;AAOE,kCAAoB,oBAPtB;AAQE,6BAAe,SARjB;AASE,uCAAyB,OAT3B;AAUE,uBAAS,GAVX;AAWE,4BAAc,sBAXhB;AAYE,6BAAe,EAZjB;AAaE,uBAAS,MAbX;AAcE,8BAAgB;AAdlB,aADS,CAlCO;AAoDlB,wBAAY,IApDM;AAqDlB,yBAAa,IArDK;AAsDlB,qBAAS,aAtDS;AAuDlB,uBAAW;AACT,sBAAQ;AADC,aAvDO;AA0DlB,oBAAQ,uBA1DU;AA2DlB,oBAAQ,CACN;AACE,0BAAY,EADd;AAEE,6BAAe;AACb,yBAAS,CAAC;AADG,eAFjB;AAKE,gCAAkB,IALpB;AAME,yBAAW,eANb;AAOE,uBAAS,EAPX;AAQE,yBAAW,EARb;AASE,gCAAkB,KATpB;AAUE,+BAAiB;AAVnB,aADM,CA3DU;AAyElB,sBAAU,IAzEQ;AA0ElB,wBAAY,IA1EM;AA2ElB,qBAAS;AACP,6BAAe,UADR;AAEP,sBAAQ;AAFD,aA3ES;AA+ElB,qBAAS;AACP,0BAAY,CAAC,CADN;AAEP,0BAAY,CAAC,CAFN;AAGP,sBAAQ;AAHD,aA/ES;AAoFlB,yBAAa;AApFK,WAApB;AAuFAC,UAAAA,UAAU,CAAC,YAAM;AACfF,YAAAA,KAAK,GAAGG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,WAAlB,CAAR;AACAH,YAAAA,kBAAkB,CAACE,KAAD,CAAlB;AACD,WAHS,CAAV;AAKAK,UAAAA,EAAE,CAAC,mDAAD,EAAsD,YAAM;AAC5DC,YAAAA,MAAM,CAACN,KAAK,CAACO,QAAP,CAAN,CAAuBC,aAAvB;AACAF,YAAAA,MAAM,CAACN,KAAK,CAACS,OAAP,CAAN,CAAsBC,cAAtB,CAAqC,eAArC,EAAsD,IAAtD;AACAJ,YAAAA,MAAM,CAACN,KAAK,CAACS,OAAN,CAAcE,aAAf,CAAN,CAAoCC,UAApC;AACD,WAJC,CAAF;AAMAP,UAAAA,EAAE,CAAC,qBAAD,EAAwB,YAAM;AAC9BC,YAAAA,MAAM,CAACN,KAAK,CAACa,IAAP,CAAN,CAAmBL,aAAnB;AACD,WAFC,CAAF;AAIAH,UAAAA,EAAE,CAAC,oCAAD,EAAuC,YAAM;AAC7CC,YAAAA,MAAM,CAACN,KAAK,CAACS,OAAP,CAAN,CAAsBC,cAAtB,CAAqC,OAArC,EAA8C,EAA9C;AACAJ,YAAAA,MAAM,CAACN,KAAK,CAACS,OAAN,CAAcK,KAAf,CAAN,CAA4BC,YAA5B,CAAyC,CAAzC;AACD,WAHC,CAAF;AAID,SA3GO,CAAR;AA6GAhB,QAAAA,QAAQ,CAAC,6CAAD,EAAgD,YAAM;AAE5DA,UAAAA,QAAQ,CAAC,gBAAD,EAAmB,YAAM;AAC/B,gBAAME,WAAW,GAAG;AAClB,yBAAW;AACT,wBAAQ;AADC,eADO;AAIlB,sBAAQ,CACN;AACE,4BAAY,uCADd;AAEE,+BAAe;AACb,2BAAS,CAAC;AADG,iBAFjB;AAKE,kCAAkB,IALpB;AAME,2BAAW,eANb;AAOE,yBAAS,QAPX;AAQE,2BAAW,EARb;AASE,kCAAkB,KATpB;AAUE,iCAAiB;AAVnB,eADM,EAaN;AACE,4BAAY,2BADd;AAEE,+BAAe;AACb,4BAAU,qBADG;AAEb,2BAAS,CAAC;AAFG,iBAFjB;AAME,kCAAkB,IANpB;AAOE,2BAAW,eAPb;AAQE,yBAAS,UARX;AASE,kCAAkB;AATpB,eAbM;AAJU,aAApB;AA8BAC,YAAAA,UAAU,CAAC,YAAM;AACfF,cAAAA,KAAK,GAAGG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,WAAlB,CAAR;AACAH,cAAAA,kBAAkB,CAACE,KAAD,CAAlB;AACD,aAHS,CAAV;AAKAK,YAAAA,EAAE,CAAC,yCAAD,EAA4C,YAAM;AAClDC,cAAAA,MAAM,CAACN,KAAK,CAACS,OAAP,CAAN,CAAsBC,cAAtB,CAAqC,OAArC;AACAJ,cAAAA,MAAM,CAACN,KAAK,CAACS,OAAN,CAAcK,KAAf,CAAN,CAA4BC,YAA5B,CAAyCd,WAAW,CAACY,IAAZ,CAAiBG,MAA1D;AACD,aAHC,CAAF;AAIAX,YAAAA,EAAE,CAAC,oDAAD,EAAuD,YAAM;AAC7DC,cAAAA,MAAM,CAACN,KAAK,CAACS,OAAN,CAAcK,KAAd,CAAoB,CAApB,EAAuBG,WAAxB,CAAN,CAA2CC,SAA3C,CAAqD,qBAArD;AACD,aAFC,CAAF;AAGAb,YAAAA,EAAE,CAAC,qDAAD,EAAwD,YAAM;AAC9DC,cAAAA,MAAM,CAACN,KAAK,CAACS,OAAN,CAAcK,KAAd,CAAoB,CAApB,EAAuBG,WAAxB,CAAN,CAA2CC,SAA3C,CAAqD,cAArD;AACD,aAFC,CAAF;AAGAb,YAAAA,EAAE,CAAC,wDAAD,EAA2D,YAAM;AACjEC,cAAAA,MAAM,CAACN,KAAK,CAACS,OAAN,CAAcK,KAAd,CAAoB,CAApB,EAAuBG,WAAxB,CAAN,CAA2CC,SAA3C,CAAqD,iBAArD;AACD,aAFC,CAAF;AAGD,WAjDO,CAAR;AAkDD,SApDO,CAAR;AAqDD,OArKO,CAAR","sourcesContent":["import { migratePanelConfig } from '../panel_config_migration';\n\ndescribe('when migrate from config with urls', () => {\n  let panel: any;\n\n  describe('given full panel configuration', () => {\n    const panelConfig = {\n      \"cards\": {\n        \"cardHSpacing\": 2,\n        \"cardMinWidth\": 5,\n        \"cardRound\": null,\n        \"cardVSpacing\": 2\n      },\n      \"color\": {\n        \"cardColor\": \"#b4ff00\",\n        \"colorScale\": \"sqrt\",\n        \"colorScheme\": \"interpolateGnYlRd\",\n        \"defaultColor\": \"#757575\",\n        \"exponent\": 0.5,\n        \"mode\": \"opacity\",\n        \"thresholds\": []\n      },\n      \"data\": {\n        \"decimals\": null,\n        \"unitFormat\": \"short\"\n      },\n      \"datasource\": \"TestData DB\",\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"highlightCards\": true,\n      \"id\": 4,\n      \"legend\": {\n        \"show\": false\n      },\n      \"nullPointMode\": \"as empty\",\n      \"seriesFilterIndex\": -1,\n      \"targets\": [\n        {\n          \"aggregation\": \"Last\",\n          \"csvWave\": {\n            \"timeStep\": 60,\n            \"valuesCSV\": \"0,0,2,2,1,1,3,3\"\n          },\n          \"decimals\": 2,\n          \"displayAliasType\": \"Warning / Critical\",\n          \"displayType\": \"Regular\",\n          \"displayValueWithAlias\": \"Never\",\n          \"refId\": \"A\",\n          \"scenarioId\": \"predictable_csv_wave\",\n          \"stringInput\": \"\",\n          \"units\": \"none\",\n          \"valueHandler\": \"Number Threshold\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"timeShift\": null,\n      \"title\": \"Panel Title\",\n      \"tooltip\": {\n        \"show\": true\n      },\n      \"type\": \"flant-statusmap-panel\",\n      \"urls\": [\n        {\n          \"base_url\": \"\",\n          \"extraSeries\": {\n            \"index\": -1\n          },\n          \"forcelowercase\": true,\n          \"icon_fa\": \"external-link\",\n          \"label\": \"\",\n          \"tooltip\": \"\",\n          \"useExtraSeries\": false,\n          \"useseriesname\": true\n        }\n      ],\n      \"useMax\": true,\n      \"usingUrl\": true,\n      \"xAxis\": {\n        \"labelFormat\": \"%a %m/%d\",\n        \"show\": true\n      },\n      \"yAxis\": {\n        \"maxWidth\": -1,\n        \"minWidth\": -1,\n        \"show\": true\n      },\n      \"yAxisSort\": \"metrics\"\n    }\n\n    beforeEach(() => {\n      panel = Object.assign({}, panelConfig);\n      migratePanelConfig(panel);\n    });\n\n    it('should migrate usingUrls to tooltip.freezeOnClick', () => {\n      expect(panel.usingUrl).toBeUndefined();\n      expect(panel.tooltip).toHaveProperty(\"freezeOnClick\", true);\n      expect(panel.tooltip.freezeOnClick).toBeTruthy();\n    });\n\n    it('should have no urls', () => {\n      expect(panel.urls).toBeUndefined();\n    });\n\n    it('should have empty items in tooltip', () => {\n      expect(panel.tooltip).toHaveProperty(\"items\", []);\n      expect(panel.tooltip.items).toHaveLength(0);\n    });\n  });\n\n  describe(\"given configuration with non-empty base_url\", () => {\n\n    describe(\"with variables\", () => {\n      const panelConfig = {\n        \"tooltip\": {\n          \"show\": true\n        },\n        \"urls\": [\n          {\n            \"base_url\": \"https://google.com/$series_label$time\",\n            \"extraSeries\": {\n              \"index\": -1\n            },\n            \"forcelowercase\": true,\n            \"icon_fa\": \"external-link\",\n            \"label\": \"google\",\n            \"tooltip\": \"\",\n            \"useExtraSeries\": false,\n            \"useseriesname\": true,\n          },\n          {\n            \"base_url\": \"example.com/$series_extra\",\n            \"extraSeries\": {\n              \"format\": \"YYYY/MM/DD/HH_mm_ss\",\n              \"index\": -1\n            },\n            \"forcelowercase\": true,\n            \"icon_fa\": \"external-link\",\n            \"label\": \"DateLink\",\n            \"useExtraSeries\": true,\n          }\n        ]\n      };\n      beforeEach(() => {\n        panel = Object.assign({}, panelConfig);\n        migratePanelConfig(panel);\n      });\n\n      it(\"should have equal size of tooltip.items\", () => {\n        expect(panel.tooltip).toHaveProperty(\"items\");\n        expect(panel.tooltip.items).toHaveLength(panelConfig.urls.length);\n      });\n      it(\"should replace time variable with __url_time_range\", () => {\n        expect(panel.tooltip.items[0].urlTemplate).toContain(\"${__url_time_range}\");\n      });\n      it(\"should replace series_label variable with __y_label\", () => {\n        expect(panel.tooltip.items[0].urlTemplate).toContain(\"${__y_label}\");\n      });\n      it(\"should replace series_extra variable with __value_date\", () => {\n        expect(panel.tooltip.items[1].urlTemplate).toContain(\"${__value_date}\");\n      });\n    });\n  });\n});\n"],"file":"panel_config_migration.js"}